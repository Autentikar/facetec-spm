// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0 effective-5.10 (swiftlang-6.0.0.9.10 clang-1600.0.26.2)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name AKFaceTecSwift
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AKCoreSwift
@_exported import AKFaceTecSwift
import DeveloperToolsSupport
import FaceTecSDK
import Foundation
import Swift
import SwiftUI
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers public class AKFaceTec : ObjectiveC.NSObject {
  @objc public static var faceTecCustomization: FaceTecSDK.FaceTecCustomization
  @objc public static var faceTecLowLightCustomization: FaceTecSDK.FaceTecCustomization
  @objc public static func setCustomization(customization: AKFaceTecSwift.AKFaceTecCustomization)
  @objc public static func getProtocol(step: AKCoreSwift.AKStepType) -> any AKCoreSwift.AKStepSharedRouterProtocol
  @objc override dynamic public init()
  @objc deinit
}
@objc @_inheritsConvenienceInitializers public class AKFaceTecCustomization : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc public var showLogo: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var logo: UIKit.UIImage {
    @objc get
    @objc set
  }
  @objc public var backgroundColor: UIKit.UIColor {
    @objc get
    @objc set
  }
  @objc public var showBackgroundImage: Swift.Bool {
    @objc get
    @objc set
  }
  @objc public var backgroundImage: UIKit.UIImage {
    @objc get
    @objc set
  }
  @objc public var textColor: UIKit.UIColor {
    @objc get
    @objc set
  }
  @objc public var activityViewColor: UIKit.UIColor {
    @objc get
    @objc set
  }
  @available(*, deprecated, renamed: "font", message: "This property will be removed soon, use font instead")
  @objc public var customFont: UIKit.UIFont? {
    @objc get
    @objc set
  }
  @objc public var font: UIKit.UIFont? {
    @objc get
    @objc set
  }
  @objc public var bundleForLocalizableString: Foundation.Bundle? {
    @objc get
    @objc set
  }
  @objc public var bundleForFaceTecString: Foundation.Bundle? {
    @objc get
    @objc set
  }
  @objc deinit
}
